{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","Api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","moviesApi","getMovieFS","title","a","key","fetch","json","FindMovie","addMovie","useState","setMovie","error","setError","searchStr","setSearchStr","getMovie","useCallback","trim","searchResult","Response","addHandler","event","preventDefault","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","onClick","App","movieFromServ","setMovieFromServ","isDuplicate","setIsDuplicate","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e0c2382.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const moviesApi = 'https://www.omdbapi.com/';\n\nexport const getMovieFS = async (title: string, key = 'fb962328') => {\n  return (await fetch(`${moviesApi}?apikey=${key}&t=${title}`)).json();\n};\n","import React, { FormEvent, useCallback, useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovieFS } from '../../Api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState('');\n  const [searchStr, setSearchStr] = useState('');\n\n  const getMovie = useCallback(async () => {\n    if (searchStr.trim()) {\n      const searchResult = await getMovieFS(searchStr);\n\n      if (searchResult.Response === 'True') {\n        setMovie(searchResult);\n        setError('');\n      } else {\n        setError('Can not find with this param');\n      }\n    } else {\n      setError('Please type search field');\n    }\n  }, [searchStr]);\n\n  const addHandler = useCallback((event: FormEvent) => {\n    event.preventDefault();\n\n    if (!error && movie) {\n      addMovie(movie);\n      setMovie(null);\n      setSearchStr('');\n    }\n  }, [movie, error]);\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={addHandler}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={searchStr}\n              onChange={(event) => {\n                setSearchStr(event.target.value);\n              }}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\">\n              {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addHandler}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movieFromServ, setMovieFromServ] = useState<Movie[] | []>([]);\n  const [isDuplicate, setIsDuplicate] = useState(false);\n\n  const addMovie = useCallback((newMovie: Movie) => {\n    if (!movieFromServ.some(movie => movie.imdbID === newMovie.imdbID)) {\n      setMovieFromServ([...movieFromServ, newMovie]);\n      setIsDuplicate(false);\n    } else {\n      setIsDuplicate(true);\n    }\n  }, [movieFromServ]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n\n        {movieFromServ && (\n          <MoviesList\n            movies={movieFromServ}\n          />\n        )}\n      </div>\n      <div className=\"sidebar\">\n        {isDuplicate\n        && <h3>Such movie is allready exist</h3>}\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}